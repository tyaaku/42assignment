
	/usr/local/bin/monitoring.sh

#!/bin/bash
arc=$(uname -a)
pcpu=$(grep "physical id" /proc/cpuinfo | sort | uniq | wc -l) 
vcpu=$(grep "^processor" /proc/cpuinfo | wc -l)
fram=$(free -m | awk '$1 == "Mem:" {print $2}')
uram=$(free -m | awk '$1 == "Mem:" {print $3}')
pram=$(free | awk '$1 == "Mem:" {printf("%.2f"), $3/$2*100}')
fdisk=$(df -BG | grep '^/dev/' | grep -v '/boot$' | awk '{ft += $2} END {print ft}')
udisk=$(df -BM | grep '^/dev/' | grep -v '/boot$' | awk '{ut += $3} END {print ut}')
pdisk=$(df -BM | grep '^/dev/' | grep -v '/boot$' | awk '{ut += $3} {ft+= $2} END {printf("%d"), ut/ft*100}')
cpul=$(top -bn1 | grep '^%Cpu' | cut -c 9- | xargs | awk '{printf("%.1f%%"), $1 + $3}')
lb=$(who -b | awk '$1 == "system" {print $3 " " $4}')
lvmu=$(if [ $(lsblk | grep "lvm" | wc -l) -eq 0 ]; then echo no; else echo yes; fi)
ctcp=$(ss -neopt state established | wc -l)
ulog=$(users | wc -w)
ip=$(hostname -I)
mac=$(ip link show | grep "ether" | awk '{print $2}')
cmds=$(journalctl _COMM=sudo | grep COMMAND | wc -l)
wall "	#Architecture: $arc
	#CPU physical: $pcpu
	#vCPU: $vcpu
	#Memory Usage: $uram/${fram}MB ($pram%)
	#Disk Usage: $udisk/${fdisk}Gb ($pdisk%)
	#CPU load: $cpul
	#Last boot: $lb
	#LVM use: $lvmu
	#Connections TCP: $ctcp ESTABLISHED
	#User log: $ulog
	#Network: IP $ip ($mac)
	#Sudo: $cmds cmd"

arc=$(uname -a): 
uname -aコマンドを使ってシステムのアーキテクチャ情報を取得し、変数arcに格納します。

pcpu=$(grep "physical id" /proc/cpuinfo | sort | uniq | wc -l): 
/proc/cpuinfoから物理CPUの数を取得し、変数pcpuに格納します。

vcpu=$(grep "^processor" /proc/cpuinfo | wc -l): 
/proc/cpuinfoから仮想CPU（スレッド）の数を取得し、変数vcpuに格納します。

fram=$(free -m | awk '$1 == "Mem:" {print $2}'): 
freeコマンドを使ってシステムの総メモリ量をMB単位で取得し、変数framに格納します。

uram=$(free -m | awk '$1 == "Mem:" {print $3}'): 
freeコマンドを使って現在使用中のメモリ量をMB単位で取得し、変数uramに格納します。

pram=$(free | awk '$1 == "Mem:" {printf("%.2f"), $3/$2*100}'): 
使用中のメモリの割合を計算し、変数pramに格納します。

fdisk=$(df -BG | grep '^/dev/' | grep -v '/boot$' | awk '{ft += $2} END {print ft}'): 
dfコマンドを使ってシステムの総ディスク容量をGB単位で取得し、変数fdiskに格納します。

udisk=$(df -BM | grep '^/dev/' | grep -v '/boot$' | awk '{ut += $3} END {print ut}'): 
dfコマンドを使って現在使用中のディスク容量をMB単位で取得し、変数udiskに格納します。

pdisk=$(df -BM | grep '^/dev/' | grep -v '/boot$' | awk '{ut += $3} {ft+= $2} END {printf("%d"), ut/ft*100}'): 
使用中のディスク容量の割合を計算し、変数pdiskに格納します。

cpul=$(top -bn1 | grep '^%Cpu' | cut -c 9- | xargs | awk '{printf("%.1f%%"), $1 + $3}'): 
CPUの負荷をパーセンテージで取得し、変数cpulに格納します。

lb=$(who -b | awk '$1 == "system" {print $3 " " $4}'): 
最後にシステムが起動した日時を取得し、変数lbに格納します。

lvmu=$(if [ $(lsblk | grep "lvm" | wc -l) -eq 0 ]; then echo no; else echo yes; fi): 
システムでLVM（Logical Volume Manager）が使用されているかどうかを確認し、変数lvmuに格納します。

ctcp=$(ss -neopt state established | wc -l): 
システム上のTCP接続の数を取得し、変数ctcpに格納します。

ulog=$(users | wc -w): 
現在のユーザー数を取得し、変数ulogに格納します。

ip=$(hostname -I): 
システムのIPアドレスを取得し、変数ipに格納します。

mac=$(ip link show | grep "ether" | awk '{print $2}'): 
システムのMACアドレスを取得し、変数macに格納します。

cmds=$(journalctl _COMM=sudo | grep COMMAND | wc -l): 
journalctlコマンドを使ってsudoコマンドの実行履歴を取得し、変数cmdsに格納します。


最後に、全ての収集した情報をwallコマンドを使ってブロードキャストし、全ユーザーがこの情報を見ることができるようにします。